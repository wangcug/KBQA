from sentence_transformers import SentenceTransformer, util
import torch

embedder = SentenceTransformer('multi-qa-mpnet-base-dot-v1')

# Corpus with example sentences
corpus_judgment = ['$是#的找矿标志?',
          '#的找矿标志包括$?',
          '#的找矿标志有$?',
          '$是不是#的找矿标志?',
          '$是不是#的围岩蚀变?',
          '$是#的围岩蚀变?',
          '#的围岩蚀变包括$?',
          '#的围岩蚀变有$?',
          '$是不是#的主要围岩蚀变?',
          '$是#的主要围岩蚀变?',
          '#的主要围岩蚀变包括$?',
          '#的主要围岩蚀变有$?',
          '$是不是#的主要近矿围岩蚀变?',
          '$是#的主要近矿围岩蚀变?',
          '#的主要近矿围岩蚀变包括$?',
          '#的主要近矿围岩蚀变有$?',
          '$是不是#的矿化蚀变类型?',
          '$是#的矿化蚀变类型?',
          '#的矿化蚀变类型包括$?',
          '#的矿化蚀变类型有$?',
          '$是不是#的成矿蚀变?',
          '$是#的成矿蚀变?',
          '#的成矿蚀变包括$?',
          '#的成矿蚀变有$?',
          '$是不是#的主要矿化蚀变类型?',
          '$是#的主要矿化蚀变类型?',
          '#的主要矿化蚀变类型包括$?',
          '#的主要矿化蚀变类型有$?',
          '$是不是#的矿化类型?',
          '$是#的矿化类型?',
          '#的矿化类型包括$?',
          '#的矿化类型有$?',
          '$是不是#的与矿体关系密切的蚀变?',
          '$是#的与矿体关系密切的蚀变?',
          '#的与矿体关系密切的蚀变包括$?',
          '#的与矿体关系密切的蚀变有$?',
          '$是不是#的花岗岩体蚀变?',
          '$是#的花岗岩体蚀变?',
          '#的花岗岩体蚀变包括$?',
          '#的花岗岩体蚀变有$?',
          '$是不是#的控矿构造?',
          '$是#的控矿构造?',
          '#的控矿构造包括$?',
          '#的控矿构造有$?',
          '$是不是#的主要控矿构造?',
          '$是#的主要控矿构造?',
          '#的主要控矿构造包括$?',
          '#的主要控矿构造有$?',
          '$是不是#的导矿构造?',
          '$是#的导矿构造?',
          '#的导矿构造包括$?',
          '#的导矿构造有$?',
          '$是不是#的主要导矿构造?',
          '$是#的主要导矿构造?',
          '#的主要导矿构造包括$?',
          '#的主要导矿构造有$?',
          '$是不是#的容矿构造?',
          '$是#的容矿构造?',
          '#的容矿构造包括$?',
          '#的容矿构造有$?',
          '$是不是#的主要容矿构造?',
          '$是#的主要容矿构造?',
          '#的主要容矿构造包括$?',
          '#的主要容矿构造有$?',
          '$是不是#的断裂构造?',
          '$是#的断裂构造?',
          '#的断裂构造包括$?',
          '#的断裂构造有$?',
          '$是不是#的控岩控矿构造?',
          '$是#的控岩控矿构造?'
          '#的控岩控矿构造包括$?',
          '#的控岩控矿构造有$?',
          '$是不是控制#的构造?',
          '$是控制#的构造?',
          '$控制#的构造?',
          '#位于$?',
          '#是不是位于$?',
          '#地处$?',
          '#是不是地处$?',
          '#分布于$?',
          '#是不是分布于$?',
          '#出露在$?',
          '#是不是出露在$?',
          '#所处的构造位置在$?',
          '#所处的构造位置是不是在$?',
          '#的区域构造位置在$?',
          '#的区域构造位置是不是在$?',
          '#主要产于哪些构造中?',
          '#是不是主要产于哪些构造中?',
          '#赋矿地层包含$时代?',
          '#赋矿地层是不是包含$时代?',
          '#出露时代包括$?',
          '#出露时代是不是包括$?',
          '#属于$构造带?',
          '#是不是属于$构造带?',
          '#包含$地层?',
          '#是不是包含$地层?',
          '#是不是有$矿物?',
          '#有$矿物?',
          '#是不是有$矿石?',
          '#有$矿石?'
          '#是不是有$共生矿物?',
          '#有$共生矿物?',
          '#是不是有$特征共生矿物?',
          '#有$特征共生矿物?',
          '#是不是有$脉体矿物?',
          '#有$脉体矿物?',
          '#是不是有$脉体矿物?',
          '#有$脉体矿物?',
          '#是不是有$基质?'
          '#有$基质?',
          '#是不是有$有害伴生矿物?',
          '#有$有害伴生矿物?',
          '#是不是有$伴生有益矿物组份?',
          '#有$伴生有益矿物组份?',
          '#是不是有$次生氧化矿物?',
          '#有$次生氧化矿物?',
          '#是不是有$副矿物?',
          '#有$副矿物?',
          '#是不是包含$碱金属元素?',
          '#包含$碱金属元素?',
          '#是不是包含$金属元素?',
          '#包含$金属元素?',
          '#是不是包含$元素?',
          '#包含$元素?',
          '#是不是包含$有益元素?',
          '#包含$有益元素?',
          '#是不是包含$伴生有害元素?',
          '#包含$伴生有害元素?',
          '#有$地层?',
          '#赋存$地层?',
          '#出露地层有$?',
          '#赋矿层位有$?',
          '#含矿层位有$?',
          '#赋存于$?',
          '#主要容矿地层有$?',
          '#分布于$?',
          '#赋矿地层有$?',
          '#含有$岩石?',
          '#围岩有$?',
          '#含矿围岩有$?'
          '#东侧围岩有$?',
          '#西侧围岩有$?',
          '#南侧围岩有$?',
          '#北侧围岩有$?',
          '#含矿岩石有$?',
          '#岩性是$?',
          '#含有$岩浆岩?',
          '#含有$沉积岩?',
          '#含有$变质岩?',
          '#赋矿岩石有$?',
          '#上覆地层有$?',
          '#下部岩石有$?',
          '#有$岩体组成?',
          '#原岩有$？',
          '#组成部分有$？',
          '#岩石成份有$？',
          '#经历过$地质作用?',
          '#经历过$成矿作用?'
          '#成矿作用有$?',
          '#变质作用有$?',
          '#是不是有$异常?',
          '#异常有$?',
          '#的圈定异常是不是有$?',
          '#圈定异常包括$?',
          '#圈定异常有$?']

corpus_embeddings = embedder.encode(corpus, convert_to_tensor=True)

# Query sentences:
input_query = input("问题: ")
query1 = [input_query]

query_embedding = embedder.encode(query1, convert_to_tensor=True)

# Find the closest 5 sentences of the corpus for each query sentence based on cosine similarity
top_k = min(5, len(corpus))

# We use cosine-similarity and torch.topk to find the highest 5 scores
cos_scores = util.cos_sim(query_embedding, corpus_embeddings)[0]
top_results = torch.topk(cos_scores, k=top_k)

print("Query:", query1)
print("\nTop 5 most similar sentences in corpus:")

for score, idx in zip(top_results[0], top_results[1]):
    print(corpus[idx], "(Score: {:.4f})".format(score))