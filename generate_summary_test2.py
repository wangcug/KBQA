import re
import sys

# 用户输入问题
# question = '个旧锡矿的出露地层有哪些'
question = '个旧锡矿的出露地层有周口店组吗'

# 匹配模板
# question_template = '出露地层有哪些'
question_template = '#出露地层有$?'

# 查询结果
data = """
                  n   r                 m
0  {'name': '个旧锡矿'}  {}   {'name': '鸟格组'}/
1  {'name': '个旧锡矿'}  {}  {'name': '永宁镇组'}/
2  {'name': '个旧锡矿'}  {}  {'name': '火把冲组'}/
3  {'name': '个旧锡矿'}  {}   {'name': '宁镇组'}/
4  {'name': '个旧锡矿'}  {}   {'name': '卡房段'}/
5  {'name': '个旧锡矿'}  {}  {'name': '马拉格段'}
"""

# data = """
#                   n   r                 m
# 0  {'name': '个旧锡矿'}  {}   {'name': ''}/
# 1  {'name': '个旧锡矿'}  {}  {'name': '永宁镇组'}
# """

# 定义判断类查询返回结果
# logic = "true"
logic = "false"

# 定义事实类模板填充字典
fact_template = {
    '#的找矿标志是什么?': ["的找矿标志有", "。"],
    '#围岩蚀变有哪些?': ["的围岩蚀变包括", "。"],
    '#主要围岩蚀变有哪些?': ["的主要围岩蚀变包括", "。"],
    '#近矿围岩蚀变有哪些?': ["的近矿围岩蚀变通常为", "。"],
    '#主要近矿围岩蚀变有哪些?': ["的主要近矿围岩蚀变通常为", "。"],
    '#矿化蚀变类型有哪些?': ["的矿化蚀变类型一般有", "。"],
    '#主要矿化蚀变类型有哪些?': ["的主要矿化蚀变类型一般有", "。"],
    '#与矿体关系密切的蚀变有哪些?': ["与矿体关系密切的蚀变有", "。"],
    '#花岗岩体蚀变主要有哪些?': ["的花岗岩体蚀变主要有", "。"],
    '#的控矿构造有哪些?': ["的控矿构造是", "。"],
    '#的主要控矿构造有哪些?': ["的主要控矿构造是", "。"],
    '#的导矿构造有哪些?': ["的导矿构造是", "。"],
    '#的主要导矿构造有哪些?': ["的主要导矿构造是", "。"],
    '#的容矿构造有哪些?': ["的容矿构造是", "。"],
    '#的主要容矿构造有哪些?': ["的主要容矿构造是", "。"],
    '#的断裂构造有哪些?': ["的断裂构造有", "。"],
    '#的控岩控矿构造有哪些?': ["的控岩控矿构造有", "。"],
    '#起控制作用?': ["受到", "的控制作用。"],
    '#所处的构造位置是哪里?': ["所处的构造位置位于", "。"],
    '#的区域构造位置是哪里?': ["的区域构造位置位于", "。"],
    '#主要产于哪些构造中?': ["主要产于", "构造中。"],
    '#位于哪里?': ["位于", "。"],
    '#赋矿地层是哪个时代?': ["赋矿地层时代是", "。"],
    '#出露时代有哪些?': ["的出露时代有", "。"],
    '#属于哪个构造带?': ["属于", "构造带。"],
    '#包含哪些地层?': ["包含有", "这些地层。"],
    '#有哪些矿物?': ["含有", "矿物。"],
    '#有哪些矿石?': ["含有", "矿石。"],
    '#有哪些共生矿物?': ["的共生矿物有", "。"],
    '#有哪些特征共生矿物?': ["的特征共生矿物有", "。"],
    '#有哪些脉体矿物?': ["的脉体矿物有", "。"],
    '#有哪些基质?': ["含有", "基质。"],
    '#有哪些氧化?': ["含有氧化矿物有", "。"],
    '#有哪些有害伴生矿物?': ["的有害伴生矿物为", "。"],
    '#有哪些伴生有益矿物组份?': ["含有", "的伴生有益矿物组份。"],
    '#有哪些次生氧化矿物?': ["含有次生氧化矿物有", "。"],
    '#有哪些副矿物?': ["的副矿物主要有", "。"],
    '#包含哪些碱金属元素?': ["包含", "这些碱金属元素。"],
    '#包含哪些金属元素?': ["的金属元素包含", "。"],
    '#包含哪些元素?': ["包含", "这些元素。"],
    '#包含哪些有益元素?': ["包含", "这些有益元素。"],
    '#包含哪些伴生有害元素?': ["包含", "这些伴生有害元素。"],
    '#赋存哪些地层?': ["赋存于", "这些地层中。"],
    '#出露地层有哪些?': ["出露的地层包括", "。"],
    '#赋矿层位有哪些?': ["赋矿层位位于", "。"],
    '#有哪些地层呢?': ["的地层包括", "。"],
    '#含矿层位有哪些?': ["的含矿层位包括", "。"],
    '#赋存于哪里?': ["赋存于", "中。"],
    '#主要容矿底层有哪些?': ["主要容矿地层有", "。"],
    '#分布于哪里?': ["分布于", "地层中。"],
    '#赋矿地层有哪些?': ["的赋矿地层有", "。"],
    '#含有哪些岩石?': ["含有的岩石有", "。"],
    '#围岩有哪些?': ["的围岩为", "。"],
    '#含矿围岩有哪些?': ["的含矿围岩包括", "。"],
    '#东侧围岩有哪些?': ["的东侧围岩包括", "。"],
    '#西侧围岩有哪些?': ["的西侧围岩包括", "。"],
    '#南侧围岩有哪些?': ["的南侧围岩包括", "。"],
    '#北侧围岩有哪些?': ["的北侧围岩包括", "。"],
    '#含矿岩石有哪些?': ["的含矿岩石有", "。"],
    '#岩性是哪些?': ["岩石的岩性包括", "。"],
    '#含有哪些岩浆岩?': ["的岩浆岩包括", "。"],
    '#含有哪些沉积岩?': ["的沉积岩包括", "。"],
    '#含有哪些变质岩?': ["的变质岩包括", "。"],
    '#赋矿岩石有哪些?': ["的赋矿岩石有", "。"],
    '#上覆地层有哪些?': ["的上覆地层有", "。"],
    '#下部岩石有哪些?': ["的下部岩石有", "。"],
    '#有哪些岩体组成?': ["由", "岩体组成。"],
    '#原岩有哪些?': ["的原岩包括", "。"],
    '#组成部分有哪些?': ["的组成部分包括", "。"],
    '#岩石成份有哪些?': ["的岩石成份包括", "。"],
    '#经历过哪些地质作用?': ["经历过的地质作用包括", "。"],
    '#经历过哪些成矿作用?': ["的经历过成矿作用包括", "。"],
    '#成矿作用有哪些?': ["的成矿作用包括", "。"],
    '#变质作用有哪些?': ["的变质作用有", "。"],
    '#异常有哪些?': ["含有的异常有", "。"],
    '#圈定异常有哪些?': ["含有的异常有", "。"]
}

# 定义判断类模板
judgment_template = {
    '$是不是#的找矿标志?': ["的找矿标志有", "。", "是", "不是"],
    '$是#的找矿标志?': ["的找矿标志有", "。", "是", "不是"],
    '#的找矿标志包括$?': ["的找矿标志有", "。", "包括", "不包括"],
    '#的找矿标志有$?': ["的找矿标志有", "。", "有", "没有"],
    '$是不是#的围岩蚀变?': ["的围岩蚀变包 括", "。", "是", "不是"],
    '$是#的围岩蚀变?': ["的围岩蚀变包括", "。", "是", "不是"],
    '#的围岩蚀变包括$?': ["的围岩蚀变包括", "。", "包括", "不包括"],
    '#的围岩蚀变有$?': ["的围岩蚀变包括", "。", "有", "没有"],
    '$是不是#的主要围岩蚀变?': ["的主要围岩蚀变包括", "。", "是", "不是"],
    '$是#的主要围岩蚀变?': ["的主要围岩蚀变包括", "。", "是", "不是"],
    '#的主要围岩蚀变包括$?': ["的主要围岩蚀变包括", "。", "包括", "不包括"],
    '#的主要围岩蚀变有$?': ["的主要围岩蚀变包括", "。", "有", "没有"],
    '$是不是#的主要近矿围岩蚀变?': ["的近矿围岩蚀变通常为", "。", "是", "不是"],
    '$是#的主要近矿围岩蚀变?': ["的近矿围岩蚀变通常为", "。", "是", "不是"],
    '#的主要近矿围岩蚀变包括$?': ["的近矿围岩蚀变通常为", "。", "包括", "不包括"],
    '#的主要近矿围岩蚀变有$?': ["的近矿围岩蚀变通常为", "。", "有", "没有"],
    '$是不是#的矿化蚀变类型?': ["的矿化蚀变类型一般有", "。", "是", "不是"],
    '$是#的矿化蚀变类型?': ["的矿化蚀变类型一般有", "。", "是", "不是"],
    '#的矿化蚀变类型包括$?': ["的矿化蚀变类型一般有", "。", "包括", "不包括"],
    '#的矿化蚀变类型有$?': ["的矿化蚀变类型一般有", "。", "有", "没有"],
    '$是不是#的成矿蚀变?': ["的成矿蚀变有", "。", "是", "不是"],
    '$是#的成矿蚀变?': ["的成矿蚀变有", "。", "是", "不是"],
    '#的成矿蚀变包括$?': ["的成矿蚀变有", "。", "包括", "不包括"],
    '#的成矿蚀变有$?': ["的成矿蚀变有", "。", "有", "没有"],
    '$是不是#的主要矿化蚀变类型?': ["的主要矿化蚀变类型一般有", "。", "是", "不是"],
    '$是#的主要矿化蚀变类型?': ["的主要矿化蚀变类型一般有", "。", "是", "不是"],
    '#的主要矿化蚀变类型包括$?': ["的主要矿化蚀变类型一般有", "。", "包括", "不包括"],
    '#的主要矿化蚀变类型有$?': ["的主要矿化蚀变类型一般有", "。", "有", "没有"],
    '$是不是#的矿化类型?': ["的矿化类型包括", "。", "是", "不是"],
    '$是#的矿化类型?': ["的矿化类型包括", "。", "是", "不是"],
    '#的矿化类型包括$?': ["的矿化类型包括", "。", "包括", "不包括"],
    '#的矿化类型有$?': ["的矿化类型包括", "。", "有", "没有"],
    '$是不是#的与矿体关系密切的蚀变?': ["中矿体关系密切的蚀变包括", "。", "是", "不是"],
    '$是#的与矿体关系密切的蚀变?': ["中矿体关系密切的蚀变包括", "。", "是", "不是"],
    '#的与矿体关系密切的蚀变包括$?': ["中矿体关系密切的蚀变包括", "。", "包括", "不包括"],
    '#的与矿体关系密切的蚀变有$?': ["中矿体关系密切的蚀变包括", "。", "有", "没有"],
    '$是不是#的花岗岩体蚀变?': ["的花岗岩体蚀变通常是", "。", "是", "不是"],
    '$是#的花岗岩体蚀变?': ["的花岗岩体蚀变通常是", "。", "是", "不是"],
    '#的花岗岩体蚀变包括$?': ["的花岗岩体蚀变通常是", "。", "包括", "不包括"],
    '#的花岗岩体蚀变有$?': ["的花岗岩体蚀变通常是", "。", "有", "没有"],
    '$是不是#的控矿构造?': ["的控矿构造有", "。", "是", "不是"],
    '$是#的控矿构造?': ["的控矿构造有", "。", "是", "不是"],
    '#的控矿构造包括$?': ["的控矿构造有", "。", "包括", "不包括"],
    '#的控矿构造有$?': ["的控矿构造有", "。", "有", "没有"],
    '$是不是#的主要控矿构造?': ["的主要控矿构造有", "。", "是", "不是"],
    '$是#的主要控矿构造?': ["的主要控矿构造有", "。", "是", "不是"],
    '#的主要控矿构造包括$?': ["的主要控矿构造有", "。", "包括", "不包括"],
    '#的主要控矿构造有$?': ["的主要控矿构造有", "。", "有", "没有"],
    '$是不是#的导矿构造?': ["的导矿构造包括", "。", "是", "不是"],
    '$是#的导矿构造?': ["的导矿构造包括", "。", "是", "不是"],
    '#的导矿构造包括$?': ["的导矿构造包括", "。", "包括", "不包括"],
    '#的导矿构造有$?': ["的导矿构造包括", "。", "有", "没有"],
    '$是不是#的主要导矿构造?': ["的主要导矿构造包括", "。", "是", "不是"],
    '$是#的主要导矿构造?': ["的主要导矿构造包括", "。", "是", "不是"],
    '#的主要导矿构造包括$?': ["的主要导矿构造包括", "。", "包括", "不包括"],
    '#的主要导矿构造有$?': ["的主要导矿构造包括", "。", "有", "没有"],
    '$是不是#的容矿构造?': ["的容矿构造通常是", "。", "是", "不是"],
    '$是#的容矿构造?': ["的容矿构造通常是", "。", "是", "不是"],
    '#的容矿构造包括$?': ["的容矿构造通常是", "。", "包括", "不包括"],
    '#的容矿构造有$?': ["的容矿构造通常是", "。", "有", "没有"],
    '$是不是#的主要容矿构造?': ["的主要容矿构造通常是", "。", "是", "不是"],
    '$是#的主要容矿构造?': ["的主要容矿构造通常是", "。", "是", "不是"],
    '#的主要容矿构造包括$?': ["的主要容矿构造通常是", "。", "包括", "不包括"],
    '#的主要容矿构造有$?': ["的主要容矿构造通常是", "。", "有", "没有"],
    '$是不是#的断裂构造?': ["的断裂构造一般有", "。", "是", "不是"],
    '$是#的断裂构造?': ["的断裂构造一般有", "。", "是", "不是"],
    '#的断裂构造包括$?': ["的断裂构造一般有", "。", "包括", "不包括"],
    '#的断裂构造有$?': ["的断裂构造一般有", "。", "有", "没有"],
    '$是不是#的控岩控矿构造?': ["的控岩控矿构造一般有", "。", "是", "不是"],
    '$是#的控岩控矿构造?': ["的控岩控矿构造一般有", "。", "是", "不是"],
    '#的控岩控矿构造包括$?': ["的控岩控矿构造一般有", "。", "包括", "不包括"],
    '#的控岩控矿构造有$?': ["的控岩控矿构造一般有", "。", "有", "没有"],
    '$是不是控制#的构造?': ["控制的构造有", "。", "是", "不是"],
    '$是控制#的构造?': ["控制的构造有", "。", "是", "不是"],
    '$控制#的构造?': ["控制的构造有", "。", "控制", "不控制"],
    '#位于$?': ["位于", "。", "是", "不是"],
    '#是不是位于$?': ["位于", "。", "是", "不是"],
    '#地处$?': ["地处", "。", "是", "不是"],
    '#是不是地处$?': ["地处", "。", "是", "不是"],
    '#分布于$?': ["分布于", "。", "是", "不是"],
    '#是不是分布于$?': ["分布于", "。", "是", "不是"],
    '#出露在$?': ["出露于", "。", "是", "不是"],
    '#是不是出露在$?': ["出露于", "。", "是", "不是"],
    '#在$?': ["在", "之中。", "是", "不是"],
    '#是不是在$?': ["在", "之中。", "是", "不是"],
    '#所处的构造位置在$?': ["所处的构造位置在", "。", "是", "不是"],
    '#所处的构造位置是不是在$?': ["所处的构造位置在", "。", "是", "不是"],
    '#的区域构造位置在$?': ["的区域构造位置在", "。", "是", "不是"],
    '#的区域构造位置是不是在$?': ["的区域构造位置在", "。", "是", "不是"],
    '#主要产于哪些构造中?': ["主要产于", "等构造中。", "是", "不是"],
    '#是不是主要产于哪些构造中?': ["主要产于", "等构造中。", "是", "不是"],
    '#赋矿地层包含$时代?': ["赋矿地层包含", "这些时代。", "包含", "不包含"],
    '#赋矿地层是不是包含$时代?': ["赋矿地层包含", "这些时代。", "包含", "不包含"],
    '#出露时代包括$?': ["出露时代包括", "。", "包括", "不包括"],
    '#出露时代是不是包括$?': ["出露时代包括", "。", "包括", "不包括"],
    '#属于$构造带?': ["构造带包括", "。", "属于", "不属于"],
    '#是不是属于$构造带?': ["构造带包括", "。", "属于", "不属于"],
    '#包含$地层?': ["包含的地层有", "。", "包含", "不包含"],
    '#是不是包含$地层?': ["包含的地层有", "。", "包含", "不包含"],
    '#是不是有$矿物?': ["的矿物有", "。", "有", "没有"],
    '#有$矿物?': ["的矿物有", "。", "有", "没有"],
    '#是不是有$矿石?': ["的矿石有", "。", "有", "没有"],
    '#有$矿石?': ["的矿石有", "。", "有", "没有"],
    '#是不是有$共生矿物?': ["的共生矿物有", "。", "有", "没有"],
    '#有$共生矿物?': ["的共生矿物有", "。", "有", "没有"],
    '#是不是有$特征共生矿物?': ["的特征共生矿物有", "。", "有", "没有"],
    '#有$特征共生矿物?': ["的特征共生矿物有", "。", "有", "没有"],
    '#是不是有$脉体矿物?': ["的脉体矿物有", "。", "有", "没有"],
    '#有$脉体矿物?': ["的脉体矿物有", "。", "有", "没有"],
    '#是不是有$基质?': ["的基质有", "。", "有", "没有"],
    '#有$基质?': ["的基质有", "。", "有", "没有"],
    '#是不是有$有害伴生矿物?': ["的有害伴生矿物有", "。", "有", "没有"],
    '#有$有害伴生矿物?': ["的有害伴生矿物有", "。", "有", "没有"],
    '#是不是有$伴生有益矿物组份?': ["的伴生有益矿物有", "。", "有", "没有"],
    '#有$伴生有益矿物组份?': ["的伴生有益矿物有", "。", "有", "没有"],
    '#是不是有$次生氧化矿物?': ["的次生氧化矿物有", "。", "有", "没有"],
    '#有$次生氧化矿物?': ["的次生氧化矿物有", "。", "有", "没有"],
    '#是不是有$副矿物?': ["的副矿物有", "。", "有", "没有"],
    '#有$副矿物?': ["的副矿物有", "。", "有", "没有"],
    '#是不是包含$碱金属元素?': ["包含", "等碱金属元素。", "包含", "不包含"],
    '#包含$碱金属元素?': ["包含", "等碱金属元素。", "包含", "不包含"],
    '#是不是包含$金属元素?': ["包含", "等金属元素。", "包含", "不包含"],
    '#包含$金属元素?': ["包含", "等金属元素。", "包含", "不包含"],
    '#是不是包含$元素?': ["包含", "等元素。", "包含", "不包含"],
    '#包含$元素?': ["包含", "等元素。", "包含", "不包含"],
    '#是不是包含$有益元素?': ["包含", "等有益元素。", "包含", "不包含"],
    '#包含$有益元素?': ["包含", "等有益元素。", "包含", "不包含"],
    '#是不是包含$伴生有害元素?': ["包含", "等伴生有害元素。", "包含", "不包含"],
    '#包含$伴生有害元素?': ["包含", "等伴生有害元素。", "包含", "不包含"],
    '$有#?': ["有", "。", "有", "没有"],
    '#有$地层?': ["的地层包括", "。", "有", "没有"],
    '#赋存$地层?': ["的赋存地层包括", "。", "有", "没有"],
    '#出露地层有$?': ["出露的地层包括", "。", "有", "没有"],
    '#赋矿层位有$?': ["的赋矿层位包括", "。", "有", "没有"],
    '#有$地层呢?': ["的地层包括", "。", "有", "没有"],
    '#含矿层位有$?': ["的含矿层位包括", "。", "有", "没有"],
    '#赋存于$?': ["赋存于", "。", "是", "不是"],
    '#主要容矿地层有$?': ["的主要容矿地层包括", "。", "有", "没有"],
    '#赋矿地层有$?': ["的赋存地层包括", "。", "有", "没有"],
    '#含有$岩石?': ["含有的岩石包括", "。", "有", "没有"],
    '#围岩有$?': ["的围岩包括", "。", "有", "没有"],
    '#含矿围岩有$?': ["的含矿围岩包括", "。", "有", "没有"],
    '#东侧围岩有$?': ["的东侧围岩包括", "。", "有", "没有"],
    '#西侧围岩有$?': ["的西侧围岩包括", "。", "有", "没有"],
    '#南侧围岩有$?': ["的南侧围岩包括", "。", "有", "没有"],
    '#北侧围岩有$?': ["的北侧围岩包括", "。", "有", "没有"],
    '#含矿岩石有$?': ["的含矿岩石包括", "。", "有", "没有"],
    '#岩性是$?': ["的岩性是", "。", "是", "不是"],
    '#含有$岩浆岩?': ["的岩浆岩包括", "。", "有", "没有"],
    '#含有$沉积岩?': ["的沉积岩包括", "。", "有", "没有"],
    '#含有$变质岩?': ["的变质岩包括", "。", "有", "没有"],
    '#赋矿岩石有$?': ["的赋存岩石有", "。", "有", "没有"],
    '#上覆地层有$?': ["的上覆地层为", "。", "有", "没有"],
    '#下部岩石有$?': ["的下部岩石为", "。", "有", "没有"],
    '#有$岩体组成?': ["由", "岩体组成。", "有", "没有"],
    '#原岩有$？': ["的原岩有", "。", "有", "没有"],
    '#组成部分有$？': ["的组成部分有", "。", "有", "没有"],
    '#岩石成份有$？': ["的岩石组分有", "。", "有", "没有"],
    '#经历过$地质作用?': ["经过了", "等地质作用。", "是", "不是"],
    '#经历过$成矿作用?': ["经过了", "等成矿作用。", "是", "不是"],
    '#成矿作用有$?': ["经历的成矿作用有", "。", "有", "没有"],
    '#变质作用有$?': ["经历的变质作用有", "。", "有", "没有"],
    '#是不是有$异常?': ["有", "异常。", "有", "没有"],
    '#异常有$?': ["有", "异常。", "有", "没有"],
    '#的圈定异常是不是有$?': ["的圈定异常包括", "。", "有", "没有"],
    '#圈定异常包括$?': ["的圈定异常包括", "。", "包括", "不包括"],
    '#圈定异常有$?': ["的圈定异常包括", "。", "有", "没有"]
}


def make_fact_summary(question, question_template, data):
    # data = data.to_string()

    # 获取查询结果
    check_result = read_py_data(data)

    # 打印查询结果
    # print(check_result)

    # 制作摘要
    summary = check_and_generate_fact_template(check_result, question, question_template)

    # 打印生成的摘要
    print(summary)

    return summary


def make_judgment_summary(question, question_template, data, logic):
    # data = data.to_string()

    # 获取查询结果
    check_result = read_py_data(data)

    # 打印查询结果
    # print(check_result)

    # 制作摘要
    summary = check_and_generate_judgment_template(check_result, question, question_template, logic)

    # 打印生成的摘要
    print(summary)

    return summary


def read_py_data(data):
    # 拆分为行
    lines = data.splitlines()

    # 提取 "name" 字段值的正则表达式
    pattern = r"'name': '([^']*)'"

    # 存储每行的所有匹配项
    results = []

    # 遍历每一行
    for line in lines:
        # 查找所有匹配项
        matches = re.findall(pattern, line)

        if matches:
            # 将匹配项存储到结果数组中
            results.append(matches)

    # print(results)

    return results


def check_and_generate_fact_template(check_result, question, question_template):
    # 判断查询结果不为空
    if len(check_result) == 0:
        print("查询结果为空,请检查查询语句或知识库中是否有相关信息！")
        sys.exit()

    entity1 = []
    entity2 = []

    for item in check_result:

        # print(type(item[2]))
        # 设定一个check值用于判断三元组是否满足条件
        check = 0

        # 判断数组长度为2
        if len(item) != 2:
            # print("查询结果中的三元组", item, "不足2个元素")
            check = 1

        # 判断三元组数组每一项都不为空
        for i in item:
            if i == '':
                # print("查询结果中的三元组", item, "有缺省值")
                check = 1

        # 如果有问题check为1,跳出本次循环
        if check:
            continue

        # 在数组中填充实体
        entity1.append(item[0])
        entity2.append(item[1])

    # 判断查询结果是否都有缺省
    if len(entity1) == 0 or len(entity2) == 0:
        print("查询结果部分缺失,请检查查询语句或知识库！")
        sys.exit()

    body = entity1[0]

    template = generate_template(body, entity2, question_template, fact_template)

    final_template = '关于您的问题“' + question + "”在知识系统中查询出：" + template
    # print(fin_template)

    return final_template


def check_and_generate_judgment_template(check_result, question, question_template, logic):
    # 判断查询结果不为空
    if len(check_result) == 0:
        print("查询结果为空,请检查查询语句或知识库中是否有相关信息！")
        sys.exit()

    entity1 = []
    entity2 = []

    for item in check_result:

        # print(type(item[2]))
        # 设定一个check值用于判断三元组是否满足条件
        check = 0

        # 判断数组长度为2
        if len(item) != 2:
            # print("查询结果中的三元组", item, "不足2个元素")
            check = 1

        # 判断三元组数组每一项都不为空
        for i in item:
            if i == '':
                # print("查询结果中的三元组", item, "有缺省值")
                check = 1

        # 如果有问题check为1,跳出本次循环
        if check:
            continue

        # 在数组中填充实体
        entity1.append(item[0])
        entity2.append(item[1])

    # 判断查询结果是否都有缺省
    if len(entity1) == 0 or len(entity2) == 0:
        print("查询结果部分缺失,请检查查询语句或知识库！")
        sys.exit()

    body = entity1[0]

    flag = ''

    if logic:
        flag = judgment_template[question_template][2]
        #print(flag)
    else:
        flag = judgment_template[question_template][3]
        #print(flag)

    template = generate_template(body, entity2, question_template, judgment_template)

    final_template = '关于您的问题“' + question + "？“  回答是：" + flag + "。在知识系统中：" + template
    # print(fin_template)

    return final_template


def generate_template(body, entity2, question_template, template_dict):
    # 初始化结果
    result = ""

    # 填充实体头
    result += body

    question_list = template_dict.keys()

    # 对于不同关系填充不同模板
    for i in question_list:
        if question_template == i:
            result += template_dict[i][0]

    # 添加实体2
    result += "、".join(entity2)

    # 对于不同关系填充不同结束词
    for i in question_list:
        if question_template == i:
            result += template_dict[i][1]

    # print(result)

    return result

# H=[]
# with open('I:\moban.txt','r',encoding='utf-8') as f:
#     for eachline in f:
#         each=eachline.strip()
#         if each not in fact_template:
#             continue
#         else:
#             res=fact_template[each][0]
#             res1='#%s*' %(res)
#             H.append(res1)
# for x in H:
#     print(x)
if __name__ == '__main__':
    # make_fact_summary(question, question_template, data)
    make_judgment_summary(question, question_template, data, logic)
